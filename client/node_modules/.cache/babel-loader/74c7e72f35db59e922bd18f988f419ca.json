{"ast":null,"code":"export const getRequest = (url, type, data) => {\n  fetch(url, {\n    method: 'GET',\n    headers: {\n      \"Content-type\": \"application/json; charset=UTF-8\"\n    }\n  });\n};\nexport const postRequest = (url, type, data) => {\n  fetch(url, {\n    method: \"POST\",\n    body: JSON.stringify(data),\n    headers: {\n      \"Content-type\": \"application/json; charset=UTF-8\"\n    }\n  });\n};\nexport const deleteRequest = (url, id, data) => {\n  fetch(url + id, {\n    method: \"DELETe\",\n    // body: JSON.stringify(data),\n    headers: {\n      \"Content-type\": \"application/json; charset=UTF-8\"\n    }\n  });\n};\nexport const get = async (url, data) => {\n  const fetch = require('node-fetch');\n\n  const requestOptions = {\n    method: 'GET',\n    headers: {\n      \"Content-type\": \"application/json; charset=UTF-8\"\n    }\n  };\n  const response = await fetch(url, requestOptions); // check if the request was successfull from it\n\n  if (data.success === true) {\n    // the response was successfull\n    // we should return the json back to the action.\n    return data;\n  } else {\n    console.warn(`faulty data received from the server: `, data, url, requestOptions);\n    throw util.generateError(data.message, data.code, 'Invalid request');\n  }\n};","map":{"version":3,"sources":["D:/work/Auth/client/src/service/index.js"],"names":["getRequest","url","type","data","fetch","method","headers","postRequest","body","JSON","stringify","deleteRequest","id","get","require","requestOptions","response","success","console","warn","util","generateError","message","code"],"mappings":"AAAA,OAAO,MAAMA,UAAU,GAAG,CAACC,GAAD,EAAOC,IAAP,EAAaC,IAAb,KAAsB;AAC5CC,EAAAA,KAAK,CAACH,GAAD,EAAM;AACPI,IAAAA,MAAM,EAAE,KADD;AAEPC,IAAAA,OAAO,EAAE;AACL,sBAAgB;AADX;AAFF,GAAN,CAAL;AAOH,CARM;AAUP,OAAO,MAAMC,WAAW,GAAG,CAACN,GAAD,EAAMC,IAAN,EAAYC,IAAZ,KAAqB;AAC5CC,EAAAA,KAAK,CAACH,GAAD,EAAM;AACPI,IAAAA,MAAM,EAAE,MADD;AAEPG,IAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeP,IAAf,CAFC;AAGPG,IAAAA,OAAO,EAAE;AACL,sBAAgB;AADX;AAHF,GAAN,CAAL;AAOH,CARM;AAWP,OAAO,MAAMK,aAAa,GAAG,CAACV,GAAD,EAAMW,EAAN,EAAUT,IAAV,KAAmB;AAC5CC,EAAAA,KAAK,CAACH,GAAG,GAAGW,EAAP,EAAW;AACZP,IAAAA,MAAM,EAAE,QADI;AAEZ;AACAC,IAAAA,OAAO,EAAE;AACL,sBAAgB;AADX;AAHG,GAAX,CAAL;AAOH,CARM;AAWP,OAAO,MAAMO,GAAG,GAAG,OAAOZ,GAAP,EAAYE,IAAZ,KAAqB;AAEpC,QAAMC,KAAK,GAAGU,OAAO,CAAC,YAAD,CAArB;;AAEA,QAAMC,cAAc,GAAG;AACnBV,IAAAA,MAAM,EAAE,KADW;AAEnBC,IAAAA,OAAO,EAAE;AACL,sBAAgB;AADX;AAFU,GAAvB;AAQA,QAAMU,QAAQ,GAAG,MAAMZ,KAAK,CAACH,GAAD,EAAMc,cAAN,CAA5B,CAZoC,CAcpC;;AACA,MAAIZ,IAAI,CAACc,OAAL,KAAiB,IAArB,EAA2B;AACvB;AACA;AACA,WAAOd,IAAP;AACH,GAJD,MAKK;AACDe,IAAAA,OAAO,CAACC,IAAR,CAAc,wCAAd,EAAuDhB,IAAvD,EAA6DF,GAA7D,EAAkEc,cAAlE;AACA,UAAMK,IAAI,CAACC,aAAL,CAAmBlB,IAAI,CAACmB,OAAxB,EAAiCnB,IAAI,CAACoB,IAAtC,EAA4C,iBAA5C,CAAN;AACH;AACJ,CAxBM","sourcesContent":["export const getRequest = (url , type, data) => {\r\n    fetch(url, {\r\n        method: 'GET',\r\n        headers: {\r\n            \"Content-type\": \"application/json; charset=UTF-8\"\r\n        }\r\n    })\r\n    \r\n}\r\n\r\nexport const postRequest = (url, type, data) => {\r\n    fetch(url, {\r\n        method: \"POST\",\r\n        body: JSON.stringify(data),\r\n        headers: {\r\n            \"Content-type\": \"application/json; charset=UTF-8\"\r\n        }\r\n    })\r\n}\r\n\r\n\r\nexport const deleteRequest = (url, id, data) => {\r\n    fetch(url + id, {\r\n        method: \"DELETe\",\r\n        // body: JSON.stringify(data),\r\n        headers: {\r\n            \"Content-type\": \"application/json; charset=UTF-8\"\r\n        }\r\n    })\r\n}\r\n\r\n\r\nexport const get = async (url, data) => {\r\n\r\n    const fetch = require('node-fetch');\r\n\r\n    const requestOptions = {\r\n        method: 'GET',\r\n        headers: {\r\n            \"Content-type\": \"application/json; charset=UTF-8\"   \r\n        }\r\n    };\r\n\r\n\r\n    const response = await fetch(url, requestOptions);\r\n\r\n    // check if the request was successfull from it\r\n    if (data.success === true) {\r\n        // the response was successfull\r\n        // we should return the json back to the action.\r\n        return data;\r\n    }\r\n    else {\r\n        console.warn(`faulty data received from the server: `, data, url, requestOptions);\r\n        throw util.generateError(data.message, data.code, 'Invalid request');\r\n    }\r\n};"]},"metadata":{},"sourceType":"module"}