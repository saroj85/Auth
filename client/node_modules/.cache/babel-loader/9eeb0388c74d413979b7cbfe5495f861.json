{"ast":null,"code":"import { LOGIN_REQUEST, NEW_USER_REGISTER, USER_DATA, GET_ALL_USER_LIST, DELETE_USER_BY_ID } from './type';\nexport const loginRequest = (email, password) => dispatch => {\n  let data = {\n    email: email,\n    password: password\n  };\n  fetch('http://localhost:5000/api/user/login', {\n    method: 'POST',\n    body: JSON.stringify(data),\n    headers: {\n      \"Content-type\": \"application/json; charset=UTF-8\"\n    }\n  }).then(response => response.json()).then(json => dispatch({\n    type: LOGIN_REQUEST,\n    payload: json\n  }));\n};\nexport const signUpRequest = data => dispatch => {\n  fetch('http://localhost:5000/api/user/Register', {\n    method: 'POST',\n    body: JSON.stringify(data),\n    headers: {\n      \"Content-type\": \"application/json; charset=UTF-8\"\n    }\n  }).then(response => response.json()).then(json => dispatch({\n    type: NEW_USER_REGISTER,\n    payload: json\n  }));\n};\nexport const userDataRequest = () => dispatch => {\n  let data = {\n    token: localStorage.getItem(\"token\")\n  };\n  console.log(\"TOKEN\", data.token);\n  fetch('http://localhost:5000/api/user/userProfile', {\n    method: 'POST',\n    body: JSON.stringify(data),\n    headers: {\n      \"Content-type\": \"application/json; charset=UTF-8\"\n    }\n  }).then(response => response.json()).then(json => dispatch({\n    type: USER_DATA,\n    payload: json\n  }));\n};\nexport const getAllUserList = () => dispatch => {\n  fetch('http://localhost:5000/api/user/getUserList', {\n    method: 'GET',\n    headers: {\n      \"Content-type\": \"application/json; charset=UTF-8\"\n    }\n  }).then(response => response.json()).then(json => dispatch({\n    type: GET_ALL_USER_LIST,\n    payload: json\n  }));\n}; // var url = new URL(\"https://geo.example.org/api\"),\n//     params = {lat:35.696233, long:139.570431}\n// Object.keys(params).forEach(key => url.searchParams.append(key, params[key]))\n// fetch(url).then(...)\n\nexport const deletUserById = id => dispatch => {\n  console.log(\"id\", id);\n  fetch(`http://localhost:5000/api/user/${id}`, {\n    method: 'DELETE',\n    headers: {\n      \"Content-type\": \"application/json; charset=UTF-8\"\n    }\n  }).then(response => response.json()).then(json => dispatch({\n    type: DELETE_USER_BY_ID,\n    payload: json\n  }));\n};","map":{"version":3,"sources":["D:/work/Auth/client/src/action/authAction.js"],"names":["LOGIN_REQUEST","NEW_USER_REGISTER","USER_DATA","GET_ALL_USER_LIST","DELETE_USER_BY_ID","loginRequest","email","password","dispatch","data","fetch","method","body","JSON","stringify","headers","then","response","json","type","payload","signUpRequest","userDataRequest","token","localStorage","getItem","console","log","getAllUserList","deletUserById","id"],"mappings":"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","sourcesContent":["import { LOGIN_REQUEST, NEW_USER_REGISTER, USER_DATA, GET_ALL_USER_LIST, DELETE_USER_BY_ID } from './type';\r\n\r\nexport const loginRequest = (email, password) => dispatch => {\r\n    let data = {\r\n        email: email,\r\n        password: password,\r\n    }\r\n    fetch('http://localhost:5000/api/user/login', {\r\n        method: 'POST',\r\n        body: JSON.stringify(data),\r\n        headers: {\r\n            \"Content-type\": \"application/json; charset=UTF-8\"\r\n        }\r\n    })\r\n        .then(response => response.json())\r\n        .then(json => dispatch({\r\n            type: LOGIN_REQUEST,\r\n            payload: json\r\n        }))\r\n}\r\n\r\n\r\n\r\nexport const signUpRequest = (data) => dispatch => {\r\n    fetch('http://localhost:5000/api/user/Register', {\r\n        method: 'POST',\r\n        body: JSON.stringify(data),\r\n        headers: {\r\n            \"Content-type\": \"application/json; charset=UTF-8\"\r\n        }\r\n    })\r\n        .then(response => response.json())\r\n        .then(json => dispatch({\r\n            type: NEW_USER_REGISTER,\r\n            payload: json\r\n        }))\r\n}\r\n\r\n\r\n\r\nexport const userDataRequest = () => dispatch => {\r\n    let data = {\r\n        token: localStorage.getItem(\"token\")\r\n    };\r\n\r\n    console.log(\"TOKEN\", data.token)\r\n    \r\n    fetch('http://localhost:5000/api/user/userProfile', {\r\n        method: 'POST',\r\n        body: JSON.stringify(data),\r\n        headers: {\r\n            \"Content-type\": \"application/json; charset=UTF-8\"\r\n        }\r\n    })\r\n        .then(response => response.json())\r\n        .then(json => dispatch({\r\n            type: USER_DATA,\r\n            payload: json\r\n        }))\r\n}\r\n\r\n\r\n\r\n\r\nexport const getAllUserList = () => dispatch => {\r\n    fetch('http://localhost:5000/api/user/getUserList', {\r\n        method: 'GET',\r\n        headers: {\r\n            \"Content-type\": \"application/json; charset=UTF-8\"\r\n        }\r\n    })\r\n        .then(response => response.json())\r\n        .then(json => dispatch({\r\n            type: GET_ALL_USER_LIST,\r\n            payload: json\r\n        }))\r\n}\r\n\r\n\r\n// var url = new URL(\"https://geo.example.org/api\"),\r\n//     params = {lat:35.696233, long:139.570431}\r\n// Object.keys(params).forEach(key => url.searchParams.append(key, params[key]))\r\n// fetch(url).then(...)\r\n\r\nexport const deletUserById = (id) => dispatch => {\r\n    console.log(\"id\", id\r\n    )\r\n    fetch(`http://localhost:5000/api/user/${id}`, {\r\n        method: 'DELETE',\r\n        headers: {\r\n            \"Content-type\": \"application/json; charset=UTF-8\"\r\n        },\r\n    })\r\n        .then(response => response.json())\r\n        .then(json => dispatch({\r\n            type: DELETE_USER_BY_ID,\r\n            payload: json\r\n        }))\r\n}\r\n"]},"metadata":{},"sourceType":"module"}